// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // e.g. "postgresql://USER:PASS@HOST:PORT/DB"
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  passwordHash  String?  
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  noteSessions  NoteSession[]
  notes         Note[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model NoteSession {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  name      String
  createdAt DateTime @default(now())
  notes     Note[]
}

model Note {
  id        String      @id @default(cuid())
  session   NoteSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  title     String
  tags      String[]    @db.Text
  content   String      @db.Text
  orderKey  Int
  createdAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  keybinding  String? 
}
